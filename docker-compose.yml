version: "3.4"

services:
  api:
    container_name: haa-libre-chat
    build:
      context: .
      dockerfile: ./ui/recipes-chat/Dockerfile
    ports:
      #- "${PORT}:${PORT}"
      - 8080:8080
      # DK Added
      - 3080:3080
    depends_on:
      - mongodb
      - rag-api
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      HOST: 0.0.0.0
      MONGO_URI: mongodb://mongodb:27017/LibreChat
      MEILI_HOST: http://meilisearch:7700
      RAG_PORT: ${RAG_PORT:-8000}
      RAG_API_URL: http://rag-api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - shared-data:/app/client/public/images
      - ./ui/recipes-chat/logs:/app/api/logs
      - ./ui/recipes-chat/tools:/app/api/app/clients/tools
      - type: bind
        source: ./ui/recipes-chat/librechat.yaml
        target: /app/librechat.yaml
      # So we can share images. mjh
      - type: bind
        source: ./ui/recipes-chat/nginx.conf
        target: /app/client/nginx.conf
  mongodb:
    container_name: haa-libre-chat-mongodb
    image: mongo:4.4.6
    restart: always
    user: "${UID}:${GID}"
    volumes:
      - ./ui/recipes-chat/data-node:/data/db
    command: mongod --noauth
  meilisearch:
    container_name: haa-libre-chat-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    user: "${UID}:${GID}"
    environment:
      MEILI_HOST: http://meilisearch:7700
      MEILI_NO_ANALYTICS: true
    volumes:
      - ./ui/recipes-chat/meili_data_v1.7:/meili_data
  rag-api:
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    container_name: haa-libre-chat-rag-api
    environment:
      DB_HOST: docsdb
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
      RAG_PORT: ${RAG_PORT:-8000}
      RAG_AZURE_OPENAI_API_KEY: ${AZURE_API_KEY_ENV}
      EMBEDDINGS_PROVIDER: azure
      EMBEDDINGS_MODEL: text-embedding-ada-002
      AZURE_OPENAI_ENDPOINT: https://dkopenai2.openai.azure.com/
      DEBUG_RAG_API: "True"
    restart: always
    depends_on:
      - docsdb
    env_file:
      - .env
  datadb:
    image: postgis/postgis:12-3.4
    container_name: haa-datadb
    environment:
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
    restart: always
    ports:
      - 5433:5432
    volumes:
      - ./ui/recipes-chat/datadb:/var/lib/postgresql/data
    env_file:
      - .env
  docsdb:
    image: ankane/pgvector:latest
    container_name: haa-docsdb
    environment:
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
    restart: always
    ports:
      - 5434:5432
    volumes:
      - ./ui/recipes-chat/docsdb:/var/lib/postgresql/data
    env_file:
      - .env
  recipedb:
    image: ankane/pgvector:latest
    container_name: haa-datarecipesdb
    environment:
      POSTGRES_DB: ${POSTGRES_RECIPE_DB}
      POSTGRES_USER: ${POSTGRES_RECIPE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECIPE_PASSWORD}
    restart: always
    ports:
      - 5435:5432
    volumes:
      - ./actions/actions_plugins/recipe-server/db/:/docker-entrypoint-initdb.d
      - ./ui/recipes-chat/recipesdb:/var/lib/postgresql/data
    env_file:
      - .env
  actions:
    platform: linux/amd64
    container_name: haa-robo-actions
    user: "1000:1000"
    build:
      context: .
      dockerfile: ./actions/Dockerfile
      args:
        DATA_DB_CONN_STRING: ${DATA_DB_CONN_STRING}
    ports:
      # API
      - 3001:8080
      # Action server portal
      - 4001:8087
    env_file:
      - .env
  # Init container 
  init:
    image: busybox
    container_name: haa-init
    volumes:
      - shared-data:/data
    command: "sh -c 'chown -R 1000:1000 /data && chmod -R 775 /data'"
    user: "root"
    depends_on:
      - actions
  ingestion:
    container_name: haa-ingestion
    build:
      context: .
      dockerfile: ./ingestion/Dockerfile
    depends_on:
      - datadb
    restart: always
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./ingestion
        target: /app
      - type: bind
        source: ./utils
        target: /app/utils
  code-interpreter:
    # image: ghcr.io/iamgreggarcia/codesphera:latest
    container_name: haa-code-interpreter
    build:
      context: .
      dockerfile: ./code-interpreter/Dockerfile
    ports:
      - "3333:3333"
    volumes:
      - shared-data:/app/static
    #command: python3 -c "import localserver.main; localserver.main.start()"
  recipe-manager:
    container_name: haa-recipe-manager
    build:
      context: .
      dockerfile: ./recipes-management/Dockerfile
    depends_on:
      - recipedb
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_RECIPE_DB}
      POSTGRES_USER: ${POSTGRES_RECIPE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECIPE_PASSWORD}
    env_file:
      - .env
    volumes:
      - ./recipes-management:/app
  # recipe-creator:
  #   container_name: haa-recipe-creator
  #   build:
  #     context: .
  #     dockerfile: ./recipes-creation/Dockerfile
  #   depends_on:
  #     - datadb
  #   restart: always
  #   environment:
  #     POSTGRES_DATA_HOST: ${POSTGRES_DATA_HOST}
  #     POSTGRES_DATA_DB: ${POSTGRES_DATA_DB}
  #     POSTGRES_DATA_USER: ${POSTGRES_DATA_USER}
  #     POSTGRES_DATA_PASSWORD: ${POSTGRES_DATA_PASSWORD}
  #     AZURE_OPENAI_API_KEY: ${AZURE_API_KEY_ENV}
  #   ports:
  #     - 8091:8081
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./recipes-creation:/app


volumes:
  pgdata2:
  shared-data:
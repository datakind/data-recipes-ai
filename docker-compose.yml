version: "3.4"

# Do not edit this file directly. Use a ‘docker-compose.override.yaml’ file if you can.
# Refer to `docker-compose.override.yaml.example’ for some sample configurations.

services:
  api:
    #platform: linux/amd64
    container_name: haa-libre-chat
    # Have to build a dockerfile as Azure multicontainer apps don't support bind mounts
    #image: ghcr.io/danny-avila/librechat:v0.7.0
    #image: ghcr.io/danny-avila/librechat-dev:latest
    build:
      context: .
      dockerfile: ./ui/recipes_assistant_chat/Dockerfile
    ports:
      #- "${PORT}:${PORT}"
      - 8080:8080
      # DK Added
      - 3080:3080
    depends_on:
      - mongodb
      - rag-api
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      HOST: 0.0.0.0
      MONGO_URI: mongodb://mongodb:27017/LibreChat
      MEILI_HOST: http://meilisearch:7700
      RAG_PORT: ${RAG_PORT:-8000}
      RAG_API_URL: http://rag-api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - ./ui/recipes_assistant_chat/images:/app/client/public/images
      - ./ui/recipes_assistant_chat/logs:/app/api/logs
      - type: bind
        source: ./ui/recipes_assistant_chat/librechat.yaml
        target: /app/librechat.yaml
  mongodb:
    #platform: linux/amd64
    container_name: haa-mongodb
    image: mongo
    restart: always
    user: "${UID}:${GID}"
    volumes:
      - ./ui/recipes_assistant_chat/data-node:/data/db
    command: mongod --noauth
  meilisearch:
    #platform: linux/amd64
    container_name: haa-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    user: "${UID}:${GID}"
    environment:
      MEILI_HOST: http://meilisearch:7700
      MEILI_NO_ANALYTICS: true
    volumes:
      - ./ui/recipes_assistant_chat/meili_data_v1.7:/meili_data
  datadb:
    #platform: linux/amd64
    image: postgis/postgis:12-3.4
    container_name: haa-datadb
    environment:
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./ui/recipes_assistant_chat/pgdata2:/var/lib/postgresql/data
    env_file:
      - .env
  recipedb:
    #platform: linux/amd64
    image: ankane/pgvector:latest
    container_name: haa-datarecipes
    environment:
      POSTGRES_DB: ${POSTGRES_RECIPE_DB}
      POSTGRES_USER: ${POSTGRES_RECIPE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECIPE_PASSWORD}
    restart: always
    ports:
      - 5439:5432
    volumes:
      - ./actions/actions_plugins/recipe-server/db/:/docker-entrypoint-initdb.d
    env_file:
      - .env
  rag-api:
    #platform: linux/amd64
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    container_name: haa-rag-api
    environment:
      DB_HOST: datadb
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
      RAG_PORT: ${RAG_PORT:-8000}
      RAG_OPENAI_API_KEY: ${AZURE_API_KEY}
      EMBEDDINGS_PROVIDER: azure
      EMBEDDINGS_MODEL: text-embedding-ada-002
      AZURE_OPENAI_ENDPOINT: https://dkopenai2.openai.azure.com/
    restart: always
    depends_on:
      - datadb
    env_file:
      - .env
  actions:
    platform: linux/amd64
    container_name: haa-robo-actions
    build:
      context: .
      dockerfile: ./actions/Dockerfile
      args:
        DATA_DB_CONN_STRING: ${DATA_DB_CONN_STRING}
    ports:
      # API
      - 3001:8080
      # Action server portal
      - 4001:8087
    env_file:
      - .env
  ingestion:
    #platform: linux/amd64
    container_name: haa-ingestion
    build:
      context: .
      dockerfile: ./ingestion/Dockerfile
    depends_on:
      - datadb
    restart: always
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./ingestion
        target: /app

volumes:
  pgdata2:
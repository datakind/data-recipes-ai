#version: "3.4"

services:
  datadb:
    image: postgis/postgis:12-3.4
    container_name: recipes-ai-datadb
    environment:
      POSTGRES_DB: ${POSTGRES_DATA_DB}
      POSTGRES_USER: ${POSTGRES_DATA_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DATA_PASSWORD}
    restart: always
    ports:
      - 5433:5432
    volumes:
      - ./data/datadb:/var/lib/postgresql/data
    env_file:
      - .env
  recipedb:
    image: ankane/pgvector:latest
    container_name: recipes-ai-recipesdb
    environment:
      POSTGRES_DB: ${POSTGRES_RECIPE_DB}
      POSTGRES_USER: ${POSTGRES_RECIPE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECIPE_PASSWORD}
    restart: always
    ports:
      - 5435:5432
    volumes:
      - ./db/recipedb:/docker-entrypoint-initdb.d
      - ./data/recipesdb:/var/lib/postgresql/data
    env_file:
      - .env
  # recipes-server:
  #   platform: linux/amd64
  #   container_name: recipes-ai-recipes-server
  #   user: "1000:1000"
  #   build:
  #     context: .
  #     dockerfile: ./actions-robocorp/Dockerfile
  #     args:
  #       DATA_DB_CONN_STRING: ${DATA_DB_CONN_STRING}
  #   ports:
  #     # API
  #     - 3001:8080
  #     # Action server portal
  #     - 4001:8087
  #   env_file:
  #     - .env
  #   volumes:
  #     - shared-data:/action-server/actions-robocorp/actions_plugins/recipes-server/images
  #     - ./utils:/action-server/actions-robocorp/actions_plugins/recipes-server/utils
  #     - ./templates:/action-server/actions-robocorp/actions_plugins/recipes-server/templates
  #     - ./management/skills.py:/action-server/actions-robocorp/actions_plugins/recipes-server/recipes/skills.py
  # # Simple FastAPI version
  server:
     platform: linux/amd64
     container_name: recipes-ai-server
     build:
       context: .
       dockerfile: ./server/fastapi/Dockerfile
       args:
         DATA_DB_CONN_STRING: ${DATA_DB_CONN_STRING}
     ports:
       - 4001:8080
     env_file:
       - .env
     volumes:
       - ./server/fastapi:/app
       - shared-data:/app/recipes/public
       - ./templates:/app/templates
       - ./utils:/app/utils
       - ./management/skills.py:/app/recipes/skills.py
  chat:
     platform: linux/amd64
     container_name: recipes-ai-chat
     build:
       context: .
       dockerfile: ./ui/chat-chainlit-flow/Dockerfile
     ports:
       - 8000:8000
     env_file:
       - .env
     volumes:
       - ./ui/chat-chainlit-flow:/app
       - shared-data:/app/public/images
       - ./templates:/app/templates
       - ./utils:/app/utils
       - ./server/robocorp/actions_plugins/recipe-server/actions.py:/app/actions.py
  # # Init container 
  # init:
  #   image: busybox
  #   container_name: recipes-ai-init
  #   volumes:
  #     - shared-data:/data
  #   command: "sh -c 'chown -R 1000:1000 /data && chmod -R 775 /data'"
  #   user: "root"
  #   depends_on:
  #     - actions
  ingestion:
    container_name: recipes-ai-ingestion
    build:
      context: .
      dockerfile: ./ingestion/Dockerfile
    depends_on:
      - datadb
    restart: always
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./ingestion
        target: /app
      - type: bind
        source: ./utils
        target: /app/utils
  # code-interpreter:
  #   # image: ghcr.io/iamgreggarcia/codesphera:latest
  #   container_name: recipes-ai-code-interpreter
  #   build:
  #     context: .
  #     dockerfile: ./code-interpreter/Dockerfile
  #   ports:
  #     - "3333:3333"
  #   volumes:
  #     - shared-data:/app/static
  #   #command: python3 -c "import localserver.main; localserver.main.start()"

  manager:
    container_name: recipes-ai-manager
    build:
      context: .
      dockerfile: ./management/Dockerfile
    depends_on:
      - recipedb
      - datadb
    restart: always
    ports:
      - 8091:8081
    environment:
      POSTGRES_DB: ${POSTGRES_RECIPE_DB}
      POSTGRES_USER: ${POSTGRES_RECIPE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECIPE_PASSWORD}
      POSTGRES_DATA_HOST: ${POSTGRES_DATA_HOST}
      POSTGRES_DATA_DB: ${POSTGRES_DATA_DB}
      POSTGRES_DATA_USER: ${POSTGRES_DATA_USER}
      POSTGRES_DATA_PASSWORD: ${POSTGRES_DATA_PASSWORD}
    env_file:
      - .env
    volumes:
      - ./management:/app
      - ./utils:/app/utils
      - ./templates:/app/templates
      - ./db/recipedb:/app/db

volumes:
  pgdata2:
  shared-data:
#==================================================#
#                    DB Settings                   #
#==================================================#
#
# You don't need to change DB settings if running locally. 
#
# IMPORTANT: However, if you are ingesting private or 
#            sensitive data, you may want to change the DB settings
#
# =========== Local Docker containers START ==========
# You can leave these as-is for quick start
#
POSTGRES_DATA_HOST=datadb
POSTGRES_DATA_PORT=5432
POSTGRES_DATA_DB=data
POSTGRES_DATA_USER=postgres
POSTGRES_DATA_PASSWORD=password123
DATA_DB_CONN_STRING=postgresql://${POSTGRES_DATA_USER}:${POSTGRES_DATA_PASSWORD}@${POSTGRES_DATA_HOST}:${POSTGRES_DATA_PORT}/${POSTGRES_DATA_DB}

POSTGRES_RECIPE_HOST=recipedb
POSTGRES_RECIPE_PORT=5432
POSTGRES_RECIPE_DB=recipe
POSTGRES_RECIPE_USER=postgres
POSTGRES_RECIPE_PASSWORD=password123
RECIPE_DB_CONN_STRING=postgresql://${POSTGRES_RECIPE_USER}:${POSTGRES_RECIPE_PASSWORD}@${POSTGRES_RECIPE_HOST}:${POSTGRES_RECIPE_PORT}/${POSTGRES_RECIPE_DB}

#==================================================#
#                 Recipes AI Settings              #
#==================================================#
# These control how recipes are retrieved and generated using LLMs.
#
# If you are using Azure OpenAI. Note, in Playground in Azure, you can 'View code' to get these
RECIPES_OPENAI_API_TYPE=<azure or openai>
RECIPES_OPENAI_API_KEY=<API Key>
RECIPES_OPENAI_API_ENDPOINT=<only for Azure, eg https://<YOUR DEPLOYMENT NAME>.openai.azure.com/>
RECIPES_OPENAI_API_VERSION=<only for Azure, eg 2024-02-15-preview>
RECIPES_MODEL=<On Opne AI model name, on Azure the deployment name you created in Azure, eg gpt-4o>
#
# Leave these as-is for quick start
RECIPES_OPENAI_TEXT_COMPLETION_DEPLOYMENT_NAME=text-embedding-ada-002
RECIPES_BASE_URL=${RECIPES_OPENAI_API_ENDPOINT}

# Variables that control matching of recipes
# Memory cutoff for the AI model (lower is more similar)
RECIPES_MEMORY_SIMILARITY_CUTOFF=0.2
RECIPES_RECIPE_SIMILARITY_CUTOFF=0.3
RECIPES_HELPER_FUNCTION_SIMILARITY_CUTOFF=0.3

RECIPES_MODEL_TEMP=0.0
RECIPES_MODEL_MAX_TOKENS=4000

#==================================================#
#          Needed for displaying images            #
#==================================================#
# You can leave this as-is if running locally
IMAGE_HOST=http://localhost:3080/images

#==================================================#
#                 API Settings                     #
#==================================================#
# This token is just your encoded email address. To generate it, see the instructions here:
# https://hdx-hapi.readthedocs.io/en/latest/getting-started/
HAPI_API_TOKEN=

#==================================================#
#               Assistant Settings                 #
#==================================================#
# Parameters for the AI assistant used in the chat interface, to serve recipes and carry out
# on-the-fly-analysis
#
ASSISTANTS_API_TYPE=<azure or openai>  
ASSISTANTS_API_KEY=<API Key as found on the Azure OpenAI resource>
ASSISTANTS_ID=<ID of the assistant you created in OpenAI. Leave blank if you do not have one yet>
ASSISTANTS_BASE_URL=<for Azure only, eg https://<YOUR DEPLOYMENT NAME>.openai.azure.com/>
ASSISTANTS_API_VERSION=<For Azure only, eg 2024-02-15-preview>
ASSISTANTS_MODEL=<On Open AI, the model name, on Azure the deployment name of the model you created in Azure which the assitant uses, eg gpt-4o>
ASSISTANTS_BOT_NAME=<Your assistant name, eg "Humanitarian AI Assistant">

#==================================================#
#             Deployments Settings                 #
#==================================================#
# You can leave these blank if you are running locally
AZURE_CONTAINER_REGISTRY=
AZURE_CONTAINER_REGISTRY_REPO=
REMOTE_DB_CONN_STRING=

#==================================================#
#                    Internal API                  #
#==================================================#
# If using Fast API
RECIPE_SERVER_API=http://server:8080/

#==================================================#
#                        E2E Tests                 #
#==================================================#
# Note, on Github use http://host.docker.internal:8000
CHAT_URL="http://chat:8000/"

#==================================================#
#                    Chainlit Settings             #
#==================================================#
# Used with Literal.ai to get telemetry and voting, can be left blank if running locally
LITERAL_API_KEY=

# Run "chainlit create-secret" to get this. 
# WARNING!!!! These are test values, ok for a quick start. Do Not deploy online with these as-is, regenerate them 
CHAINLIT_AUTH_SECRET="1R_FKRaiv0~5bqoQurBx34ctOD8kM%a=YvIx~fVmYLVd>B5vWa>e9rDX?6%^iCOv"
USER_LOGIN=muppet-data-chef
USER_PASSWORD=hB%1b36!!8-v
